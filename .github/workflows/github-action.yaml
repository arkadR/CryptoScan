name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build_subscriptions_api:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: List files in current dir
        run: dir

      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          context: "CryptoScan.Subscriptions.API"
          push: false
      
  build_web:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: List files in current dir
        run: dir

      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          context: "CryptoScan.Web"
          push: false
          build-args: |
            GH_NUGET_USERNAME=${{ secrets.GH_NUGET_USERNAME }}
            GH_NUGET_PAT=${{ secrets.GH_NUGET_PAT }}

  build_subscriptions_worker:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
          
      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          context: "CryptoScan.Subscriptions.Worker"
          push: false
          build-args: |
            GH_NUGET_USERNAME=${{ secrets.GH_NUGET_USERNAME }}
            GH_NUGET_PAT=${{ secrets.GH_NUGET_PAT }}
      
  
  build_messaging_service:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          context: "CryptoScan.Messaging.Service"
          push: false
